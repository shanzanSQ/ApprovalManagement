@model SQIndustryThree.Models.ExceptionRequestMaster
<style>
    th {
        text-align: left;
    }

    td {
        text-align: left;
    }

    #genralInfoUpdateTable tr th, #genralInfoUpdateTable tr td input {
        text-align: center;
    }
    #approverlist tr td, #approverlist tr th{

    }
    input[type=text], input[type=number], input[type=date] {
        width: 100%;
        padding: 0px;
    }
    .approvalColumn {
        height: 30px;
        text-align: center;
        align-content: center;
        font-size: 12px;
    }
</style>
<div style="padding:10px;" class="col-md-12">
    @if (Model.RivisionNo > 0)
    {
        <p style="color:red;text-align:center;font-weight:bold">Revised Exception  No:  @Model.RivisionNo</p>
    }
    <div>
        @*<span style="float:left;font-weight:bold;font-size:15px">@Model.BusinessUnitName</span>*@
        <span style="text-align:left;font-weight:bold;font-size:15px;color:red">Update Request</span>
        <span style="float:right;font-weight:bold;font-size:15px">Exception Request No: @Model.ExceptionMasterId</span>
    </div>
    @if (Model.ApproverList != null)
    {
        <table border="1" width="100%" id="approverlist">
            <caption>Approver List</caption>
            <thead>
                <tr>
                    <th>No</th>
                    <th>Approver Name</th>
                    <th>Approver Designation</th>
                    <th>Update Date</th>
                    <th>Status</th>
                    <th>Comment</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.ApproverList)
                {
                    <tr>
                        <td>@item.ApproverNO</td>
                        <td>@item.ApproverName</td>
                        <td>@item.DesignationName</td>
                        <td>
                            @if (@item.UpdateDate != null)
                            {@DateTime.Parse(@item.UpdateDate).ToString("dd MMM yyyy")}
                        </td>
                        @{
                            if (item.IsApproved == 3)
                            {
                                <td style="color:red">Pending</td>
                            }
                            else if (item.IsApproved == 1)
                            {
                                <td style="color:green">Approved</td>
                            }
                            else if (item.IsApproved == 2)
                            {
                                <td style="color:red">Rejected</td>
                            }
                            else
                            {
                                <td style="color:darkblue">Not Sent</td>
                            }
                        }
                        <td>@item.ReviewComment</td>
                    </tr>

                            }
            </tbody>
        </table>
                            }
    <div class="row">
        <div class="col-md-6">
            <table border="1" width="100%">
                <caption>Exception Request</caption>
                <tr>
                    <th width="30%">Create Date</th>
                    <td width="70%">@DateTime.Parse(Model.CreateDate).ToString("dd MMM yyyy")</td>
                </tr>
                <tr>
                    <th>Exception Type </th>
                    <td>@Model.ExceptionTypeName</td>
                </tr>
                <tr>
                    <th>Exception Reason </th>
                    <td>@Model.ExceptionReasonName</td>
                </tr>
                <tr>
                    <th>Business Unit Name</th>
                    <td>@Model.BusinessUnitName</td>
                </tr>
                <tr>
                    <th>Buyer Name</th>
                    <td>@Model.BuyerName</td>
                </tr>
                @*<tr>
            <th>Original Delivery Date</th>
            <td><input type="date" id="odddate" value='@DateTime.Parse(@Model.Odd).ToString("yyyy-MM-dd")' /></td>
        </tr>
        <tr>
            <th>Revised Delivery Date</th>
            <td><input type="date" id="revisedddate" value='@DateTime.Parse(@Model.Rdd).ToString("yyyy-MM-dd")' /></td>
        </tr>*@
                <tr>
                    <th>Reasons</th>
                    <td style="word-wrap:break-word"><input type="text" id="reasons" value="@Model.Reasons" /></td>
                </tr>
                <tr>
                    <th>Responsible Person</th>
                    <td style="word-wrap:break-word"><input type="text" id="responsibleperson" value="@Model.ResponsiblePerson" /></td>
                </tr>
            </table>
            <div>
                <label>Attach New File</label>
                <input type="file" style="width:20%" id="newFileUpload" onchange="newFileUploadonChange()" multiple />
            </div>

        </div>
        <div class="col-md-6">
            @if (Model.ExceptionTypeId == 1)
            {
                
            <table border="1" width="100%">
                <caption>@Model.ExceptionTypeName</caption>
                <tr>
                    <th> Gross / Volumetric Weight</th>
                    @if (Model.ExceptionDetails.GrossWeight == 0)
                    {
                        <td> <input type="checkbox" checked id="volumetCheck" onchange="AirFraightCostCal()" />Volumetric Weight</td>
                    }
                    else 
                    {
                <td> <input type="checkbox" id="volumetCheck" onchange="AirFraightCostCal()" />Volumetric Weight</td>
                    }
                </tr>
                <tr>
                    <th>Gross Weight</th>
                    <td><input type="number" onchange="AirFraightCostCal()"  id="gross_weight" value="@Model.ExceptionDetails.GrossWeight" /></td>
                </tr>
                <tr>
                    <th>Volumetric Weight</th>
                    <td><input type="number" onchange="AirFraightCostCal()"  id="volumetricWeight" value="@Model.ExceptionDetails.VolumetricWeight" /></td>
                </tr>
                <tr>
                    <th>Air Freight Rate</th>
                    <td><input type="number" onchange="AirFraightCostCal()"  id="airfreightRate" value="@Model.ExceptionDetails.AirFreightRate" /></td>
                </tr>
                <tr>
                    <th>Air Freight Cost</th>
                    <td><input type="number" disabled id="airfreightCost" value="@Model.ExceptionDetails.AirFreightCost" /></td>
                </tr>
                @if (Model.ExceptionDetails.Recoverable == 1)
                {
                    <tr>
                        <th width="30%">Recoverable</th>
                        <td>Yes</td>
                    </tr>

                    <tr>
                        <th>Recoverable From</th>
                        <td><input type="text" id="recoverableform" value="@Model.ExceptionDetails.RecoverableFrom" /></td>
                    </tr>
                    <tr>
                        <th>Recoverable Ammount</th>
                        <td><input type="number" id="recoverableammount" value="@Model.ExceptionDetails.RecoverableAmmount" /></td>
                    </tr>
                }
                else if (Model.ExceptionDetails.Recoverable == 2)
                {
                    <tr>
                        <th width="30%">Recoverable</th>
                        <td>No</td>
                    </tr>

                }
            </table>
            }
            else if (Model.ExceptionTypeId == 5 || Model.ExceptionTypeId == 6)
            {
                <table border="1" width="100%">
                    <caption>@Model.ExceptionTypeName</caption>
                    <tr>
                        <th width="30%">Exception Details</th>
                        <td><input type="text" id="exceptionDetails" value="@Model.ExceptionDetails.ExceptionDetails" /></td>
                    </tr>
                    <tr>
                        <th>Loss / Liability To Company</th>
                        <td><input type="text" id="lossliabilitycompany" value="@Model.ExceptionDetails.LossOrLiabilityCompany" /></td>
                    </tr>
                    <tr>
                        <th>Value of Loss/Liability</th>
                        <td><input type="text" id="valueofloss" value="@Model.ExceptionDetails.ValueOfLoss" /></td>
                    </tr>
                </table>
            }
            else
            {
                <table border="1" width="100%">
                    <caption>@Model.ExceptionTypeName</caption>
                    @{ float SumPovalue = 0; float garmentsSum = 0; }
                    @if (Model.ExceptionTypeId == 2)
                    {
                        <tr>
                            <th>PO Number</th>
                            <th>Discount Amount</th>
                        </tr>

                        foreach (var item in Model.ExpgenaralInfoList)
                        {
                            SumPovalue = SumPovalue + @item.Discount;
                            <tr>
                                <td>@item.PO</td>
                                <td>@item.Discount.ToString("C")</td>
                            </tr>

                        }
                        <tr>
                            <th>Total</th>
                            <th>@SumPovalue.ToString("C")</th>
                        </tr>
                    }
                    else if (Model.ExceptionTypeId == 3)
                    {
                        <tr>
                            <th>PO Number</th>
                            <th>Claimed Amount</th>
                        </tr>
                        foreach (var item in Model.ExpgenaralInfoList)
                        {
                            SumPovalue += item.Claim;
                            <tr>
                                <td>@item.PO</td>
                                <td>@item.Claim.ToString("C")</td>
                            </tr>
                        }
                        <tr>
                            <th>Total</th>
                            <th>@SumPovalue.ToString("C")</th>
                        </tr>
                    }
                    else if (Model.ExceptionTypeId == 4)
                    {
                        <tr>
                            <th>PO Number</th>
                            <th>Garments Liability Amount</th>
                            <th>Material Liability Amount</th>
                        </tr>
                        foreach (var item in Model.ExpgenaralInfoList)
                        {
                            SumPovalue += item.MaterialLiability;
                            garmentsSum += item.GarmentsLiability;
                            <tr>
                                <td>@item.PO</td>
                                <td>@item.GarmentsLiability.ToString("C")</td>
                                <td>@item.MaterialLiability.ToString("C")</td>
                            </tr>
                        }
                        <tr>
                            <th>Total</th>
                            <th>@garmentsSum.ToString("C")</th>
                            <th>@SumPovalue.ToString("C")</th>
                        </tr>
                    }
                </table>
            }
            @if (Model.ExceptionFilesList != null)
            {
                <ul>
                    @foreach (var item in Model.ExceptionFilesList)
                    {
                        <li>@Html.ActionLink(@item.CapexFileName, "DownloadFile", "CapexApproval", new { filepath = item.CapexFilePath.ToString(), filename = item.CapexFileName.ToString() }, new { @target = "_blank" })</li>
                    }
                </ul>
            }
            <table border="1" width="100%" id="newattachfiletable">
                <caption>New Attached File</caption>
                <thead>
                    <tr>
                        <th width="85%">File Name</th>
                        <th width="15%">Download</th>
                    </tr>
                </thead>
                <tbody id="newattachFile">
                </tbody>
            </table>
        </div>
    </div>

    <table border="1" width="100%" id="genralInfoUpdateTable">
        @{float countFob = 0, commonSum = 0, garmentsLiab = 0; }

        <caption>Genaral Information</caption>

        <thead>
            <tr>
                <th>Style</th>
                <th>Color</th>
                <th>PO</th>
                <th>ODD</th>
                <th>RDD</th>
                <th>Quantity</th>
                <th>Unit Price</th>
                <th>FOB</th>
                @if (Model.ExceptionTypeId == 2)
                {
                    <th>Discount</th>
                }
                else if (Model.ExceptionTypeId == 3)
                {
                    <th>Claim</th>
                }
                else if(Model.ExceptionTypeId==4)
                {
                    <th>Garments Liability</th>
                    <th>Material Liability</th>
                }
                <th><button class="btn btn-primary btn-sm" onclick="addGnRow(@Model.ExceptionTypeId)">Add row</button></th>
            </tr>
        </thead>
        <tbody>

            @foreach (var item in Model.ExpgenaralInfoList)
            {
                float unitPrice = item.FOB / item.Quantity;
            <tr>
                <td style="display:none"><input type="hidden" name="exceptionGenaralId" value="@item.ExceptionGenralId" /></td>
                <td><input type="text" name="styleName" value="@item.StyleNo" /></td>
                <td><input type="text" name="colorName" value="@item.Color" /></td>
                <td><input type="text" name="PoName" value="@item.PO" /></td>
                <td><input type="date" name="odddate" value='@DateTime.Parse(item.OriginalDD).ToString("yyyy-MM-dd")' /></td>
                <td><input type="date" name="revisedddate" value='@DateTime.Parse(item.RevisedDD).ToString("yyyy-MM-dd")' /></td>
                <td><input type="number" onchange="UpdateGenTotal()" name="quantity" value="@item.Quantity" /></td>
                <td><input type="number" onchange="UpdateGenTotal()" name="unitprice" value="@unitPrice" /></td>
                <td><input style="border:none;pointer-events:none" type="number" name="fobinput" value="@item.FOB" /></td>
                @if (Model.ExceptionTypeId == 2)
                {
                    commonSum += item.Discount;
                    <td><input type="number"  id="discountclaim" name="discountclaim" value="@item.Discount" /></td>
                }
                else if (Model.ExceptionTypeId == 3)
                {   commonSum += item.Claim;
                    <td><input type="number"  id="claimedAmmount" name="claimedAmmount" value="@item.Claim" /></td>
                }
                else if (Model.ExceptionTypeId == 4)
                {
                    commonSum += item.MaterialLiability;
                    garmentsLiab += item.GarmentsLiability;
                    <td><input type="number"  id="garments_liability" name="garments_liability" value="@item.GarmentsLiability" /></td>
                    <td><input type="number" id="materialliability" name="materialliability" value="@item.MaterialLiability" /></td>
                }
                <td></td>
            </tr>
                countFob = countFob + @item.FOB;
            }
        </tbody>
        <tfoot>
            <tr>
                <th colspan="7">Total </th>
                <th><input id="totalcolup" type="text" style="pointer-events:none" value="@countFob" /></th>
                @if (Model.ExceptionTypeId == 2)
                {
                    <th><input id="totaldis" type="text" style="pointer-events:none" value="@commonSum" /></th>
                }
                else if (Model.ExceptionTypeId == 3)
                {
                    <th><input id="totalclaim" type="text" style="pointer-events:none" value="@commonSum" /></th>
                }
                else if (Model.ExceptionTypeId == 4)
                {
                    <th><input id="totalgar" type="text" style="pointer-events:none" value="@garmentsLiab" /></th>
                    <th><input id="totalmat" type="text" style="pointer-events:none" value="@commonSum" /></th>
                }
                <th></th>
            </tr>
        </tfoot>
    </table>
    <div>
    <div class="row">
        <div class="col-md-6">
            <table width="100%" align="center">
                <tr>
                    <td>
                        <button value="Comments" onclick="showComments()" class="btn btn-sm btn-primary">Comments</button>
                    </td>
                    <td style="padding:5px">
                        <select id="reviewComment" class="approvalColumn form-control">
                            @if (Model.ApproverList != null)
                            {
                                foreach (var app in Model.ApproverList)
                                {
                                    if (app.IsApproved != 0)
                                    {
                                        if (app.ApproverUserId != Convert.ToInt32(Session["SQuserId"].ToString()))
                                        {
                                            <option value="@app.ApproverUserId">@app.ApproverName</option>
                                        }
                                    }

                                }
                            }

                        </select>
                    </td>
                    <td style="padding:5px">
                        <input type="text" id="reviewMessage" class="approvalColumn form-control" rows="3" style="resize:none;border-color:blue" />
                    </td>
                    <td>
                        <button style="text-align:center;align-content:center" class="btn btn-info btn-sm" onclick="ReviewComment(@Model.ExceptionMasterId)">Send Review</button>
                    </td>
                </tr>
            </table>
            <div id="comments_section" class="col-md-12" style="display:none">
                <div style="overflow-wrap:inherit; overflow-y: auto;height:200px;">
                    <p>Comment Section</p>
                    @if (Model.ExceptionComments != null)
                    {
                        foreach (var app in Model.ExceptionComments)
                        {
                            <hr style="margin:unset;padding:unset;" />
                            <p style="margin:unset;padding:unset" class="media-heading user_name"><strong style="color:blue">@app.ReviewerByName</strong>  To <strong>@app.ReviewerToName</strong></p>
                            <p style="margin:unset;padding:unset">@app.UpdatedBY.ToString("MM/dd/yyyy hh:mm tt")</p>
                            <p style="margin:unset;padding:unset">@app.ReviewMessage</p>
                        }
                    }
                </div>
            </div>
            </div>
            <div class="col-md-6" style="text-align:center"> 
                <br />
                <button style="text-align:center;align-content:center" class="btn btn-success btn-sm" onclick="UpdateValidate(@Model.ExceptionMasterId,@Model.ExceptionTypeId)">Update Request</button>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    var trrowNo = 0;
    function addGnRow(exptype) {
        trrowNo++;
            var col = '<tr id="' + trrowNo + '">'
                col += '<td style="display:none"><input type="hidden" name="exceptionGenaralId" value="0" /></td>';
                col += '<td ><input type="text"  name="styleName"  /></td>';
                col += '<td ><input type="text"  name="colorName"  /></td>';
                col += '<td ><input type="text" name="PoName"  /></td>';
                col += '<td ><input type="date" name="odddate"  /></td>';
                col += '<td ><input type="date" name="revisedddate"  /></td>';
                col += '<td ><input type="number" value="0" onchange="UpdateGenTotal(' + exptype + ')" name="quantity"  /></td>';
                col += '<td ><input type="number" value="0" onchange="UpdateGenTotal(' + exptype + ')" name="unitprice"  /></td>';
                col += '<td ><input style="border:none;pointer-events:none" type="text" name="fobinput"  /></td>';
                if (exptype == 2) {
                    col += '<td ><input type="number" value="0" onchange="UpdateGenTotal(' + exptype + ')" name="discountclaim"  /></td>';
                } else if (exptype == 3) {
                    col += '<td ><input type="number" value="0" onchange="UpdateGenTotal(' + exptype + ')" name="claimedAmmount"  /></td>';
                } else if (exptype==4) {
                    col += '<td ><input type="number" value="0" onchange="UpdateGenTotal(' + exptype + ')" name="garments_liability"  /></td>';
                    col += '<td ><input type="number" value="0" onchange="UpdateGenTotal(' + exptype + ')" name="materialliability"  /></td>';
                }
                col += '<td style="text-align:center"><input type="button" style="margin:0px;padding:0px" class="btn-danger btn-sm" value="Delete" onclick="deleterow('+trrowNo+')"  /></td></tr>';
        $("#genralInfoUpdateTable").append(col);
        UpdateGenTotal(exptype);
    }
    function deleterow(rowval) {
        $('tr#' + rowval + '').remove();
        UpdateGenTotal();
    }
    function UpdateGenTotal(exceptType) {
        var grandTotal = 0;
        var distct = 0;
        var claim = 0
        var matelia = 0;
        var garmentli = 0;
        $("#genralInfoUpdateTable tbody tr").each(function () {
            var qnty =parseInt($(this).find('input[name^="quantity"]').val());
            var unitprice =parseInt($(this).find('input[name^="unitprice"]').val());
            $(this).find('input[name^="fobinput"]').val(qnty * unitprice);
            grandTotal += (qnty * unitprice);
            if (exceptType==2) {
                distct += ($(this).find('input[name^="discountclaim"]').val()*1);
            } else if (exceptType == 3) {
                claim += ($(this).find('input[name^="claimedAmmount"]').val()*1);
            } else if (exceptType == 4) {
                garmentli += ($(this).find('input[name^="garments_liability"]').val()*1);
                matelia += ($(this).find('input[name^="materialliability"]').val()*1);
            }
        });
        $("#totalcolup").val(grandTotal);
        $("#totaldis").val(distct);
        $("#totalclaim").val(claim);
        $("#totalmat").val(matelia);
        $("#totalgar").val(garmentli);
    }
    function ValidationAlert() {
        swal({
            title: 'Please Insert the input value Correctly',
            type: 'warning',
            closeOnCancel: true
        });
    }

    function AirFraightCostCal() {
        var airfreightrate = $("#airfreightRate").val();
        if ($('#volumetCheck').is(":checked")) {
            //$("#gross_weighttd").hide();
            //$("#volumetricWeighttd").show();
            $("#gross_weight").val(0); 
            $("#gross_weight").prop("disabled", true);
            $("#volumetricWeight").prop("disabled", false);
            //$("#checkhtml").html("Gross Weight");
            var valueg = $("#volumetricWeight").val();
            $("#airfreightCost").val(airfreightrate * valueg);
        } else if ($('#volumetCheck').is(":checked") == false) {
            //$("#gross_weighttd").show();
            //$("#volumetricWeighttd").hide();
            $("#volumetricWeight").val(0);
            $("#gross_weight").prop("disabled", false);
            $("#volumetricWeight").prop("disabled", true);
            //$("#checkhtml").html("Volumetric Weight");
            var valueg = $("#gross_weight").val();
            $("#airfreightCost").val(airfreightrate * valueg);
        }
    }
    function GetInput(masterId,exceptType) {
        var jsonData = {};
        //jsonData["Odd"] = $("#odddate").val();
        jsonData["ExceptionMasterId"] = masterId;
        //jsonData["Rdd"] = $("#revisedddate").val();
        jsonData["Reasons"] = $("#reasons").val();
        jsonData["ResponsiblePerson"] = $("#responsibleperson").val();
        var genaralInformation = [];
        $('#genralInfoUpdateTable tr').each(function () {
                var myData = {};
                myData["StyleNo"] = $(this).find('input[name^="styleName"]').val();
                myData["ExceptionGenralId"] = $(this).find('input[name^="exceptionGenaralId"]').val();
                myData["Color"] = $(this).find('input[name^="colorName"]').val();
                myData["PO"] = $(this).find('input[name^="PoName"]').val();
                myData["OriginalDD"] = $(this).find('input[name^="odddate"]').val();
                myData["RevisedDD"] = $(this).find('input[name^="revisedddate"]').val();
                myData["Quantity"] = $(this).find('input[name^="quantity"]').val();
                myData["FOB"] = $(this).find('input[name^="fobinput"]').val();
                if (exceptType==2) {
                    myData["Discount"] = $(this).find('input[name^="discountclaim"]').val();
                } else if (exceptType == 3) {
                    myData["Claim"] = $(this).find('input[name^="claimedAmmount"]').val();
                } else if (exceptType == 4) {
                    myData["MaterialLiability"] = $(this).find('input[name^="materialliability"]').val();
                    myData["GarmentsLiability"] = $(this).find('input[name^="garments_liability"]').val();
                }
                if ($(this).find('input[name^="quantity"]').val()>0) {
                    genaralInformation.push(myData);
                }
        });
        jsonData["ExpgenaralInfoList"] = genaralInformation; 
        var dtinfo = {};
        dtinfo["GrossWeight"]=$("#gross_weight").val();
        dtinfo["VolumetricWeight"]=$("#volumetricWeight").val();
        dtinfo["AirFreightRate"]=$("#airfreightRate").val();
        dtinfo["AirFreightCost"]=$("#airfreightCost").val();
        dtinfo["RecoverableFrom"]=$("#recoverableform").val();
        dtinfo["RecoverableAmmount"]=$("#recoverableammount").val();
        dtinfo["PoInvoiceNo"]=$("#poinvoiceNo").val();
        //dtinfo["DiscountAmount"]=$("#discountAmount").val();
        //dtinfo["ClaimedAmmount"]=$("#claimedAmmount").val();
        //dtinfo["AmmountCancelation"]=$("#materialliability").val();
        dtinfo["ExceptionDetails"]=$("#exceptionDetails").val();
        dtinfo["LossOrLiabilityCompany"]=$("#lossliabilitycompany").val();
        dtinfo["ValueOfLoss"] = $("#valueofloss").val();
        dtinfo["ExceptionMasterId"] = masterId;
        jsonData["ExceptionDetails"] = dtinfo;
        var fileUpload = [];
        $('#newattachFile tr').each(function () {
            var filedate = {};
            filedate["CapexFileName"] = $(this).find('td[name^="fileName"]').html();
            filedate["CapexFilePath"] = $(this).find('td[name^="filePath"]').html();
                fileUpload.push(filedate);
        });
        jsonData["ExceptionFilesList"] = fileUpload; 
        
        //console.log(JSON.stringify(jsonData));
        return jsonData;
    }
    function newFileUploadonChange() {
        var fileData = new FormData();
        var fileUpload = $("#newFileUpload").prop('files');
            if (fileUpload.length>0) {
                 for (var i = 0; i < fileUpload.length; i++) {
                     fileData.append(fileUpload[i].name, fileUpload[i]);
                 }
        }
        var urlpath = '@Url.Action("ExceptionFileUpload", "Exception")';
        $.ajax({
            url: urlpath,
            type: "post", 
            processData: false,
            contentType: false,
            data: fileData  ,
            success: function (result) {
                for (var i = 0; i < result.length; i++) {
                   var newRow = $('<tr>');
                   var cols = "";
                   cols += '<td name="fileName">' + result[i].CapexFileName + '</td>';
                   cols += '<td style="display:none" name="filePath">' + result[i].CapexFilePath + '</td>';
                   cols += '<td><input type="button" class="btn-danger btn-sm"  onclick="DeleteNewFile(this,\''+result[i].ServerFileName+'\')"   value="x"></td></tr>';
                   newRow.append(cols);
                   $("#newattachFile").append(newRow);
                }
                $("#newFileUpload").val('');
            },
            error: function (err) {
                alert(err.responseText);
            }
        });
    }
    function DeleteNewFile(r, filePath) {
       var urlpath = '@Url.Action("DeleteFiles", "Exception")';
        $.ajax({
            url: urlpath,
            dataType: 'json',
            type: "Post",
            data: { FilePath: filePath },
            async: true,
            success: function (data) {
               var i = r.parentNode.parentNode.rowIndex;
               document.getElementById("newattachfiletable").deleteRow(i);
            }
        });
        
    }
    function UpdateExceptionDataBase(master,exptype) {
        swal({
            title: "Are you sure?",
            text: "You will not be able to recover this change!",
            type: "warning",
            showCancelButton: true,
            confirmButtonClass: "btn-primary",
            confirmButtonText: "Yes, Update it!",
            cancelButtonText: "Cencel",
            closeOnConfirm: false,
            closeOnCancel: true
        }, function (isConfirm) {
                if (isConfirm) {
                    var jsondate = GetInput(master,exptype);
                    var urlpath = '@Url.Action("UpdateExceptionRequest", "Exception")';
                    $.ajax({
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify(jsondate),
                        url: urlpath,
                        type: "POST",
                        async: true,
                        success: function (data) {
                            swal({
                                title: 'Exception Request Updated Successfully',
                                type: 'success',
                                closeOnCancel: true
                            });
                            GetAllExceptionRequest(1, 0);
                            // ExceptionFileUpload(data.pk);
                        }, error: function () {
                            alert("Error");
                        }
                    });
                }
        });       
    }
    function UpdateValidate(master,exptype) {
        if ($("#reasons").val() == "") {
            $('#reasons').css({ "border-color": "#FF0000" });
        }else if ($("#responsibleperson").val() == "") {
            $('#responsibleperson').css({ "border-color": "#FF0000" });
        }else {
            var cheval = true;
            $("#genralInfoUpdateTable tr").each(function () {
                var stylename = $(this).find('input[name^="styleName"]').val();
                var color = $(this).find('input[name^="colorName"]').val();
                var po = $(this).find('input[name^="PoName"]').val();
                var odd = $(this).find('input[name^="odddate"]').val();
                var fbb = $(this).find('input[name^="revisedddate"]').val();
                var quantit = $(this).find('input[name^="quantity"]').val();
                var unitp = $(this).find('input[name^="unitprice"]').val();
                if (stylename == "" || color=="" || po == "" || odd == "" || fbb == "" || quantit == "" || unitp == "")
                {
                    cheval = false;
                }
                if (exptype == 2) {
                    var discount = $(this).find('input[name^="discountclaim"]').val();
                    if (discount == "" || discount < 1) {
                        cheval = false;
                    }
                } else if (exptype == 3) {
                    var claim = $(this).find('input[name^="claimedAmmount"]').val();
                    if (claim == "" || claim < 1) {
                        cheval = false;
                    }
                } else if (exptype == 4) {
                    var garment = $(this).find('input[name^="garments_liability"]').val();
                    var material = $(this).find('input[name^="materialliability"]').val();
                    if (garment == "" || garment < 1 || material == "" || material < 1) {
                        cheval = false;
                    }
                }
            });
            if (exptype == 1) {
                if ($("#airfreightCost").val()<=0) {
                    cheval = false;
                }
            } else if (exptype==5) {
                if ($("#exceptionDetails").val()== "" || $("#lossliabilitycompany").val()=="" || 
                        $("#valueofloss").val()=="") {
                    cheval = false;
                }
            }
            if (cheval == false) {
                ValidationAlert();
            } else {
                UpdateExceptionDataBase(master, exptype);
            }
        }
    }
</script>